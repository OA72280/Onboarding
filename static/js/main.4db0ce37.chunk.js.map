{"version":3,"sources":["base.js","SignIn/SignIn.js","CreateUser/CreateUser.js","SideBar/Side.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","fireauth","auth","firestore","SignIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSignIn","ev","preventDefault","self","assertThisInitialized","signInWithEmailAndPassword","target","email","value","password","catch","err","setState","visible","errorMessage","message","onDismiss","state","react_default","a","createElement","className","Row","Col","sm","md","src","alt","Alert","color","isOpen","toggle","Form","onSubmit","mdbreact_esm","name","style","fontSize","label","type","NavLink","textDecoration","to","Component","CreateUser","firstName","lastName","confirmPassword","createUserWithEmailAndPassword","makeid","text","possible","i","charAt","Math","floor","random","length","xs","Side","firebaseOut","signOut","then","console","log","handleSignOut","localStorage","removeItem","sessionStorage","window","location","reload","modal","href","margin","padding","onClick","mql","matchMedia","Home","dockSideBar","sidebarDocked","sidebarOpen","onSetSidebarOpen","open","mediaQueryChanged","matches","width","innerWidth","docked","addListener","addEventListener","handleWindowChange","sidebarContent","src_SideBar_Side","sideData","user","uid","styles","sidebar","backgroundColor","textAlign","overlay","onSetOpen","PageRequested","react_sidebar_esm","App","authHandler","setItem","signedIn","getUserFromsessionStorage","onAuthStateChanged","getItem","_this2","data","Switch","Route","exact","path","render","src_Home_0","Redirect","src_SignIn_SignIn","src_CreateUser_CreateUser","Boolean","hostname","match","ReactDOM","BrowserRouter","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4db0ce37.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyBw6szL5DbKvfBBL_4dWP02M5ebhw4KbYI\",\n    authDomain: \"launch-4119e.firebaseapp.com\",\n    databaseURL: \"https://launch-4119e.firebaseio.com\",\n    projectId: \"launch-4119e\",\n    storageBucket: \"launch-4119e.appspot.com\",\n    messagingSenderId: \"82092361460\"\n});\n\nexport const fireauth = firebase.auth();\n// export const database = firebase.database();\n// export const firestorage = firebase.storage().ref();\nexport const firestore = firebase.firestore();\n// export const storage = firebase.storage();\n\nexport default firebase;","import React, {Component} from 'react';\nimport './SignIn.css';\n\nimport {Input, Button} from 'mdbreact';\nimport {Form, Row, Col, Alert} from 'reactstrap';\nimport {NavLink} from 'react-router-dom';\n\nimport {fireauth} from '../base'\n\nclass SignIn extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false,\n      errorMessage: '',\n    }\n  }\n\n  /**\n     * \n     * Allows user to sign in with email and password when submitted\n     * \n     * @param ev: |event| Ex: {click}\n     * \n     */\n\n  handleSignIn = (ev) => {\n    ev.preventDefault();\n\n    let self = this;\n    fireauth.signInWithEmailAndPassword(ev.target.email.value, ev.target.password.value)\n      .catch(function(err) {\n        self.setState({visible: true, errorMessage: err.message})\n      });\n  };\n\n  /**\n     * \n     * Dismiss error box\n     * \n     * @param : |event| Ex: {click}\n     * \n     */\n\n  onDismiss = () => {\n    this.setState({visible: false})\n  };\n\n  render() {\n    return (\n      <section className=\"container\">\n        <div className=\"left-half tall\" />\n        <div className=\"right-half tall\">\n          <article>\n            <Row>\n              <Col className='imgCol' sm='0' md='4'>\n                <img className='logo' src={'https://upload.wikimedia.org/wikipedia/commons/7/7a/Dell_EMC_logo.svg'} alt=\"Dell EMC\" />\n              </Col>\n              <Col className='text' sm='12' md='7'>Welcome to the LAUNCH!\n              </Col>\n            </Row>\n            <Alert color=\"primary\" isOpen={this.state.visible} toggle={this.onDismiss}>\n              {this.state.errorMessage}\n            </Alert>\n            <Form onSubmit={this.handleSignIn}>\n              <Input name='email' style={{fontSize: '0.85em'}} label=\"Email\"/>\n              <Input name='password' label=\"Password\" type=\"password\"/>\n              <br/>\n              <Button className='signInButton' type='submit' color=\"blue\" >Sign In!</Button>\n              <NavLink style={{textDecoration: 'none'}} to=\"/launch/CreateAccount\">Sign Up!</NavLink>\n            </Form>\n          </article>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default SignIn;","import React, {Component} from 'react';\nimport './CreateUser.css';\n\nimport {Input, Button} from 'mdbreact';\nimport {Form, Row, Col, Alert} from 'reactstrap';\n\nimport {fireauth} from '../base';\n// import {database} from './base';\n\nclass CreateUser extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      //Hides message when opening create user | object | ex. error message\n      visible: false,\n      message: '',\n    };\n  }\n\n  /**\n     * \n     * Submits user information in create user form\n     * \n     * @param ev: |event| Ex: {click}\n     * \n     */\n\n  onSubmit = (ev) => {\n    ev.preventDefault();\n    let target = ev.target;\n\n    if ( target.firstName.value === ''\n      || target.lastName.value === ''\n      || target.email.value === ''\n      || target.password.value === ''\n      || target.confirmPassword.value === '') {\n\n        this.setState({visible: true, message: 'Please fill out the entire form!'});\n    } else {\n\n      if (target.password.value !== target.confirmPassword.value)\n        this.setState({visible: true, message: 'Passwords Don\\'t Match!'});\n      else {\n        //creates user with email and password\n        fireauth.createUserWithEmailAndPassword(target.email.value, target.password.value)\n      }\n    }\n\n  };\n\n  /**\n     * \n     * dismisses alert\n     * \n     * @param ev: |event| Ex: {click}\n     * \n     */\n\n  onDismiss = () => {\n    this.setState({ visible: false });\n  };\n\n  /**\n     * \n     * Creates random ID for user in database\n     * \n     * \n     */\n\n  makeid = () => {\n    let text = \"\";\n    let possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    \n    for (var i = 0; i < 15; i++)\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    \n    return text;\n  }\n\n  render() {\n    return (\n      <section className=\"container\">\n        <div className=\"left-half tall\" />\n        <div className=\"right-half tall\">\n          <article>\n            <Row>\n              <Col className='imgCol' sm='0' md='3'>\n                <img className='logo' src={'https://upload.wikimedia.org/wikipedia/commons/7/7a/Dell_EMC_logo.svg'} alt=\"Dell EMC\" />\n              </Col>\n              {/* <Col xs='0' md='1'/> */}\n              <Col className='text' sm='12' md='7'>\n                Lets Start by Signing Up!\n              </Col>\n            </Row>\n            <br/>\n            <Alert color=\"primary\" isOpen={this.state.visible} toggle={this.onDismiss}>\n              {this.state.message}\n            </Alert>\n            <Form onSubmit={this.onSubmit}>\n              <Row>\n                <Col xs='12' md='6'>\n                  <Input name='firstName' className='firstName' style={{fontSize: '0.85em'}} label=\"First Name\"/>\n                </Col>\n                <Col xs='12' md='6'>\n                  <Input name='lastName' className='lastName' style={{fontSize: '0.85em'}} label=\"Last Name\"/>\n                </Col>\n              </Row>\n              <Input name='email' style={{fontSize: '0.85em'}} label=\"Email\"/>\n              <Input name='password' label=\"Password\" type=\"password\"/>\n              <Input name='confirmPassword' label=\"Confirm Password\" type=\"password\"/>\n              <br/>\n              <Button type='submit' className='signInButton' color=\"blue\">Sign Up!</Button>\n            </Form>\n          </article>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default CreateUser;","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { fireauth } from \"../base\";\nimport { Container, Fa, Row, Col, Input, CardHeader, CardBody, CardTitle, Button, Modal, ModalFooter} from 'mdbreact'\nimport './Side.css'\n\nclass Side extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            modal: false,\n            name: '',\n            email: '',\n            message: '',\n        }\n    }\n  \n    firebaseOut = () => {\n        fireauth.signOut().then(() => {\n            console.log(\"User Signed out\")\n        })\n    };\n        //handles user logout\n    handleSignOut = () => {\n        localStorage.removeItem('uid')\n        sessionStorage.removeItem('user')\n        this.firebaseOut()\n        window.location.reload()\n    };\n  \n    render() {\n        return (\n\n            <div>\n                \n                <div>\n                    <NavLink style={{textDecoration: 'none'}} to={`/launch/Home`}>\n                        <img className='sideLogo' src={'https://upload.wikimedia.org/wikipedia/commons/7/7a/Dell_EMC_logo.svg'} alt=\"Dell EMC\" />\n                    </NavLink>\n\n                    {/* <NavLink style={{textDecoration: 'none'}} to={`/itatlas/Home/MyTeam`}>\n                        <div className='sideHover'>\n                            <i className=\"fas fa-users\"></i>\n                            <h6 style={{margin: '0', padding: '0', fontSize: '0.5em'}}>My Team</h6>\n                        </div>\n                    </NavLink>\n\n                    <NavLink style={{textDecoration: 'none'}} to={`/itatlas/Home/ClientTeam`}>\n                        <div className='sideHover'>\n                            <i className=\"fab fa-hubspot\"></i>\n                            <h6 style={{margin: '0', padding: '0', fontSize: '0.5em'}}>Client Team</h6>\n                        </div>\n                    </NavLink> */}\n\n                    {/* <NavLink style={{textDecoration: 'none'}} to={`/www.youtube.com`}> */}\n                    <a href=\"https://support.emc.com/myservice360/\">\n                        <div className='sideHover'>\n                            <i className=\"fab fa-hubspot\"></i>\n                            <h6 style={{margin: '0', padding: '0', fontSize: '0.5em'}}>Service 360</h6>\n                        </div>\n                    </a>\n                    {/* </NavLink> */}\n{/* \n\n                    <NavLink style={{textDecoration: 'none'}} to={`/itatlas/Home/SEC`}>\n                        <div style={{cursor: 'pointer'}} className='sideHover'>\n                            <i className=\"fa fa-money\" />\n                            <h6 style={{margin: '0', padding: '0', fontSize: '0.5em'}}>SEC Fillings</h6>\n                        </div>\n                    </NavLink>\n\n                    <NavLink style={{textDecoration: 'none'}} to={`/itatlas/Home/Portfolio`}>\n                        <div style={{cursor: 'pointer'}} className='sideHover'>\n                            <i className=\"fa fa-camera-retro\" />\n                            <h6 style={{margin: '0', padding: '0', fontSize: '0.5em'}}>Dell Tech</h6>\n                        </div>\n                    </NavLink> */}\n\n\n                    <NavLink onClick={this.handleSignOut} style={{textDecoration: 'none'}} to={`/launch/SignIn`}>\n                        <i className=\"fas fa-sign-out-alt singOutIcon\"/>\n                    </NavLink>\n\n                </div>\n            </div>\n         )\n    }\n}\n\nexport default Side","import React, {Component} from 'react'\n\nimport Sidebar from 'react-sidebar'\nimport Side from './SideBar/Side.js'\n\n// import {firestore} from './Backend/base.js'\nimport {Row, Col} from 'reactstrap'\n// import {Redirect} from 'react-router-dom';\n\nimport './Home.css'\n\nconst mql = window.matchMedia(`(min-width: 600px)`)\n\nclass Home extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Used to handle width changes \n      width: window.innerWidth,\n      mql: mql,\n      docked: props.docked,\n      open: props.open,\n    };\n  }\n\n  componentWillMount() {\n\n    let self = this\n    mql.addListener(this.mediaQueryChanged)\n    window.addEventListener('resize', this.handleWindowChange)\n    this.setState({\n      mql: mql,\n      sidebarDocked: mql.matches,\n    })\n  }\n\n  /**\n   * \n   * Remove sizing listener\n   * \n   */\n  // componentWillUnMount() {\n  //   window.removeEventListener('resize', this.handleWindowChange)\n  // }\n\n  /**\n   *\n   * Toggle side bar from hidden side bar button\n   *\n   */\n  dockSideBar = () => {\n    if (this.state.sidebarDocked)\n      this.setState({\n        sidebarOpen: false,\n      });\n    else\n      this.setState({\n        sidebarOpen: true,\n      });\n  };\n\n  /**\n   *\n   * Set state when side bar is open\n   *\n   * @param open: |Boolean|\n   */\n  onSetSidebarOpen = (open) => {\n    this.setState({\n      sidebarOpen: open,\n    });\n  };\n\n  /**\n   * \n   * Change side bar boolean to hide sidebar\n   * \n   */\n  mediaQueryChanged = () => {\n    this.setState({\n      sidebarDocked: this.state.mql.matches,\n    });\n  };\n\n\n  render() {\n\n    // Side bar loaded from Side component\n    let sidebarContent = <Side />;\n\n    // Side bar const styles\n    const sidebarStyles = {\n      sidebar: {\n        backgroundColor: '#f2f2f2',\n        width: '5em',\n        textAlign: 'center',\n      },\n      overlay: {\n        backgroundColor: '#f3f3f3'\n      },\n    };\n\n    // Data about user and where they are\n    const data = {\n      user: this.props.user,\n      uid: this.props.uid,\n    }\n\n    // Data used to show side bar \n    const sideData = {\n      styles: sidebarStyles,\n      sidebar: sidebarContent,\n      open: this.state.sidebarOpen,\n      docked: this.state.sidebarDocked,\n      onSetOpen: this.onSetSidebarOpen,\n    };\n\n  \n    // Handle Routing for which main page to show\n    // This is how the side bar laods the different components\n    // if (this.props.path === 'AtlasGrid') {\n    let PageRequested = <p>LAUNCH</p>\n    // } \n    // else if (this.props.path === 'ClientTeam') {\n    //   PageRequested = <ClientTeam owner={this.props.uid} account={this.props.account} />\n    // }\n    // } else {\n    //   PageRequested = <ClientTeam {...data}/>\n    // }\n\n    \n    return (\n      <Sidebar {...sideData}> \n\n        <Row>\n          <h1 className='ITAtlasText'> <b>LAUNCH</b></h1>\n        </Row>\n\n        <hr/>\n        <Row>\n          <Col sm='1'/>\n          <Col className='animated zoomIn live' sm='10'>\n            {PageRequested}\n          </Col>\n          <Col sm='1'/>\n        </Row>\n\n        <br />\n        <br />\n        <br />\n\n      </Sidebar>\n    )\n  }\n}\n\nexport default Home;","import React, {Component} from 'react';\n\nimport SignIn from './SignIn/SignIn';\nimport CreateUser from './CreateUser/CreateUser';\nimport Home from './Home';\nimport firebase from './base';\n\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\n// How to disable warnings in a file /* eslint-disable */\n\nimport './App.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      uid: null,\n      user: null,\n    }\n  }\n\n  componentWillMount() {\n    this.getUserFromsessionStorage();\n    let self = this;\n    firebase.auth().onAuthStateChanged(\n      (user) => {\n        if (user) {\n          // finished signing in\n          self.authHandler(user)\n        } else {\n          // finished signing out\n          self.setState({uid: null}, () => {\n            // window.location.reload();\n          });\n        }\n      }\n    )\n  }\n\n  getUserFromsessionStorage() {\n    const uid = sessionStorage.getItem('uid');\n    if (!uid) return;\n    this.setState({uid})\n  }\n\n  authHandler = (user) => {\n    sessionStorage.setItem('uid', user.uid);\n    this.setState({uid: user.uid, user: user})\n  };\n\n  signedIn = () => {\n    return this.state.uid\n  };\n\n  render() {\n    const data = {\n      user: this.state.user,\n      uid: this.state.uid,\n    }\n  \n    return (\n      <Switch>\n\n        <Route exact path='/launch/Home' render={() => (\n          this.signedIn()\n            ? (this.state.user\n              ?\n                <Home {...data}/>\n              :\n               null\n            )\n            // eslint-disable-next-line\n            : <Redirect to=\"/launch/SignIn\"/>\n        )}/>\n\n        <Route exact path='/launch/SignIn' render={() => (\n          !this.signedIn()\n            ? <SignIn/>\n            // eslint-disable-next-line\n            : <Redirect to={`/launch/Home`}/>\n        )}/>\n        \n        <Route exact path='/launch/CreateAccount' render={() => (\n          !this.signedIn()\n            ? <CreateUser/>\n            // eslint-disable-next-line\n            : <Redirect to={`/launch/Home`}/>\n        )}/>\n\n        <Route render={() => {\n          return (\n            // eslint-disable-next-line\n            <Redirect to={`/launch/Home`} />\n          )\n        }}/>\n\n      </Switch>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n// import registerServiceWorker from './registerServiceWorker';\n\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(\n  <Router>\n    <Route component={App} />\n  </Router>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n// registerServiceWorker();"],"sourceRoot":""}